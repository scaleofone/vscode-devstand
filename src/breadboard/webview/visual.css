.map-surface-container {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    overflow: scroll;
    overscroll-behavior: contain;
}

.map-surface {
    transform-origin: 0 0;
    position: absolute;
    top: 0;
    left: 0;
    /* outline: 1px dotted lime; */
}

.bg-scrollable {
    background-attachment: local;
}


.square {
    position: absolute;
    z-index: 2;
    min-width: 8rem;
    outline: 1px solid var(--square-border-color);
    background: white;
    transition: transform 0.3s, box-shadow 0.3s;
}
.shadow-square {
    box-shadow: 1px 2px 2px 0px rgba(0,0,0,0.3);
}

.square.is-grabbing {
    transform: scale(1.02);
    box-shadow: 5px 10px 10px 0px rgba(0,0,0,0.2);
}


svg path.animated {
    stroke-dasharray: 5;
    /* animation: dashdraw 0.2s linear infinite; */
}
@keyframes dashdraw {
    0% {
        stroke-dashoffset: 10;
    }
}


.zoom-button {
    background: transparent !important;
    color: var(--vscode-foreground);
    min-width: var(--button-size);
    width: var(--button-size);
    height: var(--button-size);
}
.zoom-button.disabled {
    color: var(--vscode-descriptionForeground);
}
.zoom-button.disabled:focus {
    outline-color: var(--vscode-textSeparator-foreground) !important;
}


.underline-dotted {
    text-decoration-style: dotted;
    text-decoration-thickness: 2px;
    text-decoration-color: red;
    text-decoration-line: underline;
    text-underline-offset: 2px;
}


.record-knob {
    position: relative;
    width: 0;
}
.record-knob:before {
    content: '';
    position: absolute;
    z-index: -1;
    top: 50%;
    margin-top: calc(-0.5 * var(--knob-size));
    left: calc(-0.5 * var(--knob-size));
    height: var(--knob-size);
    width: var(--knob-size);

    border-radius: 50%;
    border: 1px solid var(--square-border-color);
    background: var(--knob-color);
}
.record-knob:after {
    content: '';
    position: absolute;
    top: 50%;
    left: -3px;
    margin-top: -3px;
    height: 6px;
    width: 6px;
    border-radius: 50%;
    background: var(--square-color);
}
.record-knob.record-knob--alt:after {
    left: calc((var(--knob-size) - 2px)/-2);
    margin-top: calc((var(--knob-size) - 2px)/-2);
    height: calc(var(--knob-size) - 2px);
    width: calc(var(--knob-size) - 2px);
    border: calc((var(--knob-size) - 2px)/2 - 3px) solid var(--knob-color);
}


.show-record-knob-on-hover .record-knob {
    opacity: 0;
}
.show-record-knob-on-hover:hover .record-knob {
    opacity: 1;
}

.reference-trolley {
    border-radius: 50rem;
    background: var(--vscode-editor-background);
    border: 1px solid var(--square-border-color);
    margin-left: calc(-0.5 * var(--knob-size));
    padding-left: calc(0.5 * var(--knob-size));
    padding-right: calc(0.5 * var(--knob-size));
}

/* .square--dragover {
    border-color: var(--breadboard-grabbingVariableColorHex) !important;
} */

.brick--dragover:not(.brick--having-editor) {
    padding-bottom: var(--height-mono);
    position: relative;
}
.brick--dragover:not(.brick--having-editor):after {
    content: '';
    display: block;
    left: 0;
    right: 0;
    outline: 2px solid var(--breadboard-grabbingVariableColorHex);
    position: absolute;
    height: calc(var(--height-mono) - 4px);
    bottom: 2px;
}

.brick--dragover.brick--having-editor .element--inputValue {
    outline: 2px solid var(--breadboard-grabbingVariableColorHex);
}

.outline-editor {
    outline: 1px solid var(--square-border-color);
    z-index: 1;
    outline-offset: 0px !important;
}
.outline-editor:focus {
    outline-color: var(--vscode-notebook-focusedEditorBorder);
    z-index: 2;
}


.min-max-width--contentIdentifierElement {
    min-width: calc(2 * var(--vscode-editor-font-size));
    max-width: calc(10 * var(--vscode-editor-font-size));
}
.min-max-width--contentIdentifierElement:empty {
    min-width: calc(7 * var(--vscode-editor-font-size));
}

/* .record-dropdown-button {
    width: 0;
    position: relative;
} */
.show-record-dropdown-button-on-hover .record-dropdown-button .dropdown {
    opacity: 0;
}
.show-record-dropdown-button-on-hover:hover .record-dropdown-button .dropdown {
    opacity: 1;
}
.show-record-dropdown-button-on-hover .record-dropdown-button .dropdown[open] {
    opacity: 1 !important;
}
/* .record-dropdown-button > .dropdown {
    position: absolute;
    left: -16px;
    top: calc(var(--knob-size) / -2);
}
.record-dropdown-button .dropdown {
    background-color: var(--vscode-editor-background);
} */


.show-record-addInsideScope-button-on-hover .record-addInsideScope-button {
    opacity: 0;
}
.show-record-addInsideScope-button-on-hover:hover .record-addInsideScope-button {
    opacity: 1;
}

.bottom-action-area {
    --button-size: 40px;
    --button-padding-x: 1rem;
    --scrollbar-width: 10px;
    position: fixed;
    bottom: var(--scrollbar-width);
    right: var(--scrollbar-width);
    padding: var(--scrollbar-width);
    background-color: var(--vscode-editor-background);
}

.bottom-action-button {
    height: var(--button-size);
    padding-left: var(--button-padding-x);
    padding-right: var(--button-padding-x);
}


.hide-arrows .map-surface > svg {
    opacity: 0 !important;
}
.hide-dots .bg-dots {
    background-image: none !important;
}
.hide-square-shadows .shadow-square {
    box-shadow: none !important;
}
.make-bg-green .map-surface-container {
    background-color: lightgreen !important;
}
.hide-component-dropdown .role-component-header .dropdown {
    display: none !important;
}
.hide-scrollbars {
    --vscode-scrollbarSlider-background: transparent !important;
}
.smaller-bottom-action-area .bottom-action-area {
    --scrollbar-width: 3px !important;
    --button-size: auto !important;
    --button-padding-x: 1rem !important;
}




.unreferenced-component-identifier {
    opacity: 0.8;
}
